/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* a, ListNode* b) {
        
        if(a==nullptr)
        {
            return b;
        }
        if(b==nullptr)
        {
            return a;
        }
        
        ListNode * head=nullptr;
        ListNode * tail=nullptr;
       
            if(a->val<=b->val)
            {
                head=tail=a;
                a=a->next;
            }
            else
            {
                head=tail=b;
                b=b->next;
            }
        
         while(a!=nullptr && b!=nullptr)
         {
             if(a->val<=b->val)
             {
                 tail->next=a;
                 tail=a;
                 a=a->next;
             }
             else
             {
                 tail->next=b;
                 tail=b;
                 b=b->next;
                 
             }
         }
        if(a!=nullptr)
        {
          tail->next=a;  
        }
        else
        {
            tail->next=b;
        }
        return head;
        }
    };